{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap f8901ae2fa44c2c7fab8","webpack:///./js/src/constants.js","webpack:///./js/src/player.js","webpack:///./js/src/api.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///(webpack)/buildin/global.js","webpack:///./js/src/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","ALBUMS_URL","RANDOM_URL","TRACKS_URL","createPlayer","playlist","arguments","length","undefined","AudioContext","window","webkitAudioContext","sampleRate","DGPlayer","playerAPI","volume","player","onplay","onplaylist","on","a","b","disconnect","DGAuroraPlayer","AV","Player","fromURL","current","url","off","state","document","getElementById","trackToggle","trackId","active","_api","fetchTrack","then","data","addTrackToPlaylist","removeTrackFromPlaylist","albumToggle","albumId","fetchAlbum","tracks","forEach","item","id","artist","title","file","album","cover","removeAlbumFromPlaylist","randomAdd","fetchRandom","addSong","_id","encodeURI","picture","songToRemove","find","song","indexOfSong","indexOf","console","warn","removeSong","fetch","handleWrongStatusCoode","res","status","Error","split","slice","join","statusText","json","catch","err","error","_constants","global","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","Headers","headers","this","map","append","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","support","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","arrayBuffer","ArrayBuffer","rejected","text","decode","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","Request","input","options","credentials","mode","referrer","form","trim","bytes","shift","replace","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","type","ok","self","list","push","values","getAll","has","set","callback","thisArg","e","clone","response","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","open","withCredentials","responseType","setRequestHeader","send","polyfill","g","Function","eval","reactingOnClicks","event","target","already","dataset","handleActiveClass","mainClassName","className","_player","isAlreadyActive","Array","classList","match","remove","add","addEventListener"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA+DA,OAnCAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAK,EAAA,SAAAK,GAA2C,MAAAA,IAG3CV,EAAAW,EAAA,SAAAR,EAAAS,EAAAC,GACAb,EAAAc,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAb,EAAAoB,EAAA,SAAAhB,GACA,GAAAS,GAAAT,KAAAiB,WACA,WAA2B,MAAAjB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAW,EAAAE,EAAA,IAAAA,GACAA,GAIAb,EAAAc,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDvB,EAAA0B,EAAA,GAGA1B,IAAA2B,EAAA,KDMM,SAAUvB,EAAQD,EAASH,GAEjC,YAGAe,QAAOC,eAAeb,EAAS,cAC7BO,OAAO,GE5EIkB,cAAa,eACbC,aAAa,eACbC,aAAa,gBFkFpB,SAAU1B,EAAQD,EAASH,GAEjC,YG9EO,SAAS+B,KAA4B,GAAfC,GAAeC,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,OACrB,WACf,GAAIG,GAAgBC,OAAOD,cAAgBC,OAAOC,kBAClD,OAAKF,IAGE,GAAIA,IAAeG,WAFf,WAIf,SAAUC,GACN,GAAKA,EAAL,CACAC,EAAYD,EACZA,EAASR,SAAWA,EACpBQ,EAASE,OAAS,EAElB,IAAIC,GAAQC,EAAQC,CAEpBL,GAASM,GAAG,OAAQF,EAAS,SAASG,EAAEC,EAAEvC,GAClCkC,GACAA,EAAOM,aAEXN,EAAS,GAAIO,gBAAeC,GAAGC,OAAOC,QAAQZ,EAAUa,QAAQC,KAAMf,GACtEA,EAASgB,IAAI,OAAQZ,KAGzBJ,EAASM,GAAG,WAAYD,EAAa,SAASE,EAAEC,EAAEvC,GAC3CkC,IACCA,EAAOM,aACPT,EAASiB,MAAQ,UAErBd,EAAS,GAAIO,gBAAeC,GAAGC,OAAOC,QAAQZ,EAAUa,QAAQC,KAAMf,OAE3EA,SAASkB,SAASC,eAAe,cAIjC,QAASC,GAAYC,EAASC,GAC7BA,GACA,EAAAC,EAAAC,YAAWH,GACNI,KAAK,SAACC,GACHC,EAAmBD,EAAML,KAGjCO,EAAwBP,GAIzB,QAASQ,GAAYC,EAASR,GAC7BA,GACA,EAAAC,EAAAQ,YAAWD,GACNL,KAAK,SAACC,GACHA,EAAKM,OAAOC,QAAQ,SAACC,GACjBP,EAAmBO,EAAKC,GAAIT,EAAKU,OAAQF,EAAKG,MAAOH,EAAKI,KAAMZ,EAAKa,MAAOb,EAAKc,WAI7FC,wBAAwBX,GAIzB,QAASY,MACZ,EAAAnB,EAAAoB,eACKlB,KAAK,SAACC,GACHA,EAAKO,QAAQ,SAACC,GACVP,EAAmBO,EAAKC,GAAID,EAAKE,OAAQF,EAAKG,MAAOH,EAAKI,KAAMJ,EAAKK,MAAOL,EAAKM,WAMjG,QAASb,GAAmBQ,EAAIC,EAAQC,EAAOC,EAAMC,EAAOC,GACxDvC,EAAU2C,SACNC,IAASV,EACT/D,KAASgE,EAAS,MAAQC,EAC1BtB,IAAS+B,UAAUR,GACnBF,OAASA,EACTG,MAASA,EACTQ,QAAUD,UAAUN,IAK5B,QAASZ,GAAwBO,GAC7B,GAAKlC,EAAL,CACA,GAAI+C,GAAe/C,EAAUT,SAASyD,KAAK,SAACC,GAAD,MAAUA,GAAKL,MAAQV,IAC9DgB,EAAclD,EAAUT,SAAS4D,QAAQJ,EAC7C,OAAIG,GAAc,MACdE,SAAQC,KAAK,0BAGjBrD,EAAUsD,WAAaJ,IHR3B5E,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EGpFgB4B,eHqFhB5B,EGlDgByD,cHmDhBzD,EGxCgBkE,cHyChBlE,EG5BgB+E,WAjEhB,IAAAnB,GAAA/D,EAAA,GAFIyC,MHiME,SAAUrC,EAAQD,KAMlB,SAAUC,EAAQD,EAASH,GAEjC,cAC4B,SAASgG,GIxMrC,QAASC,GAAuBC,GAC5B,GAAmB,MAAfA,EAAIC,OACJ,KAAM,IAAIC,OAAMF,EAAI3C,IAAI8C,MAAR,KAAmBC,MAAM,GAAGC,KAA5B,SACVL,EAAIC,OADM,IACSD,EAAIM,WAGjC,OAAON,GAGJ,QAASf,KACZ,MAAOa,oBACF/B,KAAKgC,GACLhC,KAAK,SAACiC,GAAD,MAASA,GAAIO,SAClBC,MAAM,SAACC,GAAD,MAASd,SAAQe,MAAMD,KAG/B,QAASpC,GAAWD,GACvB,MAAO0B,mBAAyB1B,GAC3BL,KAAKgC,GACLhC,KAAK,SAACiC,GAAD,MAASA,GAAIO,SAClBC,MAAM,SAACC,GAAD,MAASd,SAAQe,MAAMD,KAG/B,QAAS3C,GAAWH,GACvB,MAAOmC,mBAAyBnC,GAC3BI,KAAKgC,GACLhC,KAAK,SAACiC,GAAD,MAASA,GAAIO,SAClBC,MAAM,SAACC,GAAD,MAASd,SAAQe,MAAMD,KJ+KtC5F,OAAOC,eAAeb,EAAS,cAC3BO,OAAO,IAEXP,EIpMgBgF,cJqMhBhF,EI9LgBoE,aJ+LhBpE,EIxLgB6D,YAzBhB,IAAA6C,GAAA7G,EAAA,KJmP6BO,KAAKJ,EAASH,EAAoB,KAIzD,SAAUI,EAAQD,EAASH,IKvPjC,SAAA8G,IACA,YAEA,WACA,YAMA,SAAAC,GAAAnG,GAIA,GAHA,gBAAAA,KACAA,EAAAoG,OAAApG,IAEA,6BAAAqG,KAAArG,GACA,SAAAsG,WAAA,yCAEA,OAAAtG,GAAAuG,cAGA,QAAAC,GAAA1G,GAIA,MAHA,gBAAAA,KACAA,EAAAsG,OAAAtG,IAEAA,EAGA,QAAA2G,GAAAC,GACAC,KAAAC,OAEAF,YAAAD,GACAC,EAAA7C,QAAA,SAAA/D,EAAAE,GACA2G,KAAAE,OAAA7G,EAAAF,IACO6G,MAEFD,GACLvG,OAAA2G,oBAAAJ,GAAA7C,QAAA,SAAA7D,GACA2G,KAAAE,OAAA7G,EAAA0G,EAAA1G,KACO2G,MA4CP,QAAAI,GAAAC,GACA,MAAAA,GAAAC,SACAC,QAAAC,OAAA,GAAAb,WAAA,sBAEAU,EAAAC,UAAA,GAGA,QAAAG,GAAAC,GACA,UAAAH,SAAA,SAAAI,EAAAH,GACAE,EAAAE,OAAA,WACAD,EAAAD,EAAAG,SAEAH,EAAAI,QAAA,WACAN,EAAAE,EAAArB,UAKA,QAAA0B,GAAAC,GACA,GAAAN,GAAA,GAAAO,WAEA,OADAP,GAAAQ,kBAAAF,GACAP,EAAAC,GAGA,QAAAS,GAAAH,GACA,GAAAN,GAAA,GAAAO,WAEA,OADAP,GAAAU,WAAAJ,GACAP,EAAAC,GAgBA,QAAAW,KAyEA,MAxEArB,MAAAM,UAAA,EAGAN,KAAAsB,UAAA,SAAAjB,GAEA,GADAL,KAAAuB,UAAAlB,EACA,gBAAAA,GACAL,KAAAwB,UAAAnB,MACO,IAAAoB,EAAAT,MAAAU,KAAAzH,UAAA0H,cAAAtB,GACPL,KAAA4B,UAAAvB,MACO,IAAAoB,EAAAI,UAAAC,SAAA7H,UAAA0H,cAAAtB,GACPL,KAAA+B,cAAA1B,MACO,IAAAA,GAEA,IAAAoB,EAAAO,cAAAC,YAAAhI,UAAA0H,cAAAtB,GAIP,SAAAxB,OAAA,iCALAmB,MAAAwB,UAAA,IASAC,EAAAT,MACAhB,KAAAgB,KAAA,WACA,GAAAkB,GAAA9B,EAAAJ,KACA,IAAAkC,EACA,MAAAA,EAGA,IAAAlC,KAAA4B,UACA,MAAArB,SAAAI,QAAAX,KAAA4B,UACS,IAAA5B,KAAA+B,cACT,SAAAlD,OAAA,uCAEA,OAAA0B,SAAAI,QAAA,GAAAe,OAAA1B,KAAAwB,cAIAxB,KAAAgC,YAAA,WACA,MAAAhC,MAAAgB,OAAAtE,KAAAqE,IAGAf,KAAAmC,KAAA,WACA,GAAAD,GAAA9B,EAAAJ,KACA,IAAAkC,EACA,MAAAA,EAGA,IAAAlC,KAAA4B,UACA,MAAAT,GAAAnB,KAAA4B,UACS,IAAA5B,KAAA+B,cACT,SAAAlD,OAAA,uCAEA,OAAA0B,SAAAI,QAAAX,KAAAwB,aAIAxB,KAAAmC,KAAA,WACA,GAAAD,GAAA9B,EAAAJ,KACA,OAAAkC,KAAA3B,QAAAI,QAAAX,KAAAwB,YAIAC,EAAAI,WACA7B,KAAA6B,SAAA,WACA,MAAA7B,MAAAmC,OAAAzF,KAAA0F,KAIApC,KAAAd,KAAA,WACA,MAAAc,MAAAmC,OAAAzF,KAAA2F,KAAAC,QAGAtC,KAMA,QAAAuC,GAAAC,GACA,GAAAC,GAAAD,EAAAE,aACA,OAAAC,GAAAtE,QAAAoE,IAAA,EAAAA,EAAAD,EAGA,QAAAI,GAAAC,EAAAC,GACAA,OACA,IAAAzC,GAAAyC,EAAAzC,IACA,IAAAuC,EAAA3I,UAAA0H,cAAAkB,GAAA,CACA,GAAAA,EAAAvC,SACA,SAAAX,WAAA,eAEAK,MAAAhE,IAAA6G,EAAA7G,IACAgE,KAAA+C,YAAAF,EAAAE,YACAD,EAAA/C,UACAC,KAAAD,QAAA,GAAAD,GAAA+C,EAAA9C,UAEAC,KAAAwC,OAAAK,EAAAL,OACAxC,KAAAgD,KAAAH,EAAAG,KACA3C,IACAA,EAAAwC,EAAAtB,UACAsB,EAAAvC,UAAA,OAGAN,MAAAhE,IAAA6G,CAWA,IARA7C,KAAA+C,YAAAD,EAAAC,aAAA/C,KAAA+C,aAAA,QACAD,EAAA/C,SAAAC,KAAAD,UACAC,KAAAD,QAAA,GAAAD,GAAAgD,EAAA/C,UAEAC,KAAAwC,OAAAD,EAAAO,EAAAN,QAAAxC,KAAAwC,QAAA,OACAxC,KAAAgD,KAAAF,EAAAE,MAAAhD,KAAAgD,MAAA,KACAhD,KAAAiD,SAAA,MAEA,QAAAjD,KAAAwC,QAAA,SAAAxC,KAAAwC,SAAAnC,EACA,SAAAV,WAAA,4CAEAK,MAAAsB,UAAAjB,GAOA,QAAA+B,GAAA/B,GACA,GAAA6C,GAAA,GAAApB,SASA,OARAzB,GAAA8C,OAAArE,MAAA,KAAA5B,QAAA,SAAAkG,GACA,GAAAA,EAAA,CACA,GAAAtE,GAAAsE,EAAAtE,MAAA,KACAzF,EAAAyF,EAAAuE,QAAAC,QAAA,WACAnK,EAAA2F,EAAAE,KAAA,KAAAsE,QAAA,UACAJ,GAAAhD,OAAAqD,mBAAAlK,GAAAkK,mBAAApK,OAGA+J,EAGA,QAAAnD,GAAAyD,GACA,GAAAC,GAAA,GAAA3D,GACA4D,EAAAF,EAAAG,wBAAAR,OAAArE,MAAA,KAOA,OANA4E,GAAAxG,QAAA,SAAA0G,GACA,GAAA9E,GAAA8E,EAAAT,OAAArE,MAAA,KACA+E,EAAA/E,EAAAuE,QAAAF,OACAhK,EAAA2F,EAAAE,KAAA,KAAAmE,MACAM,GAAAvD,OAAA2D,EAAA1K,KAEAsK,EAKA,QAAAK,GAAAC,EAAAjB,GACAA,IACAA,MAGA9C,KAAAsB,UAAAyC,GACA/D,KAAAgE,KAAA,UACAhE,KAAApB,OAAAkE,EAAAlE,OACAoB,KAAAiE,GAAAjE,KAAApB,QAAA,KAAAoB,KAAApB,OAAA,IACAoB,KAAAf,WAAA6D,EAAA7D,WACAe,KAAAD,QAAA+C,EAAA/C,kBAAAD,GAAAgD,EAAA/C,QAAA,GAAAD,GAAAgD,EAAA/C,SACAC,KAAAhE,IAAA8G,EAAA9G,KAAA,GAzRA,IAAAkI,KAAAzF,MAAA,CAoCAqB,EAAA7F,UAAAiG,OAAA,SAAA7G,EAAAF,GACAE,EAAAmG,EAAAnG,GACAF,EAAA0G,EAAA1G,EACA,IAAAgL,GAAAnE,KAAAC,IAAA5G,EACA8K,KACAA,KACAnE,KAAAC,IAAA5G,GAAA8K,GAEAA,EAAAC,KAAAjL,IAGA2G,EAAA7F,UAAA,gBAAAZ,SACA2G,MAAAC,IAAAT,EAAAnG,KAGAyG,EAAA7F,UAAAL,IAAA,SAAAP,GACA,GAAAgL,GAAArE,KAAAC,IAAAT,EAAAnG,GACA,OAAAgL,KAAA,SAGAvE,EAAA7F,UAAAqK,OAAA,SAAAjL,GACA,MAAA2G,MAAAC,IAAAT,EAAAnG,SAGAyG,EAAA7F,UAAAsK,IAAA,SAAAlL,GACA,MAAA2G,MAAAC,IAAA/F,eAAAsF,EAAAnG,KAGAyG,EAAA7F,UAAAuK,IAAA,SAAAnL,EAAAF,GACA6G,KAAAC,IAAAT,EAAAnG,KAAAwG,EAAA1G,KAGA2G,EAAA7F,UAAAiD,QAAA,SAAAuH,EAAAC,GACAlL,OAAA2G,oBAAAH,KAAAC,KAAA/C,QAAA,SAAA7D,GACA2G,KAAAC,IAAA5G,GAAA6D,QAAA,SAAA/D,GACAsL,EAAAzL,KAAA0L,EAAAvL,EAAAE,EAAA2G,OACOA,OACFA,MAiCL,IAAAyB,IACAT,KAAA,cAAAkD,OAAA,QAAAA,OAAA,WACA,IAEA,MADA,IAAAxC,OACA,EACO,MAAAiD,GACP,aAGA9C,SAAA,YAAAqC,MACAlC,YAAA,eAAAkC,OAgFAvB,GAAA,6CA2CAC,GAAA3I,UAAA2K,MAAA,WACA,UAAAhC,GAAA5C,OA4BAqB,EAAArI,KAAA4J,EAAA3I,WAgBAoH,EAAArI,KAAA8K,EAAA7J,WAEA6J,EAAA7J,UAAA2K,MAAA,WACA,UAAAd,GAAA9D,KAAAuB,WACA3C,OAAAoB,KAAApB,OACAK,WAAAe,KAAAf,WACAc,QAAA,GAAAD,GAAAE,KAAAD,SACA/D,IAAAgE,KAAAhE,OAIA8H,EAAAzE,MAAA,WACA,GAAAwF,GAAA,GAAAf,GAAA,MAAuClF,OAAA,EAAAK,WAAA,IAEvC,OADA4F,GAAAb,KAAA,QACAa,EAGA,IAAAC,IAAA,oBAEAhB,GAAAiB,SAAA,SAAA/I,EAAA4C,GACA,GAAAkG,EAAAzG,QAAAO,MAAA,EACA,SAAAoG,YAAA,sBAGA,WAAAlB,GAAA,MAA+BlF,SAAAmB,SAA0BkF,SAAAjJ,MAGzDkI,KAAApE,UACAoE,KAAAtB,UACAsB,KAAAJ,WAEAI,KAAAzF,MAAA,SAAAoE,EAAAqC,GACA,UAAA3E,SAAA,SAAAI,EAAAH,GAUA,QAAA2E,KACA,qBAAA3B,GACAA,EAAA2B,YAIA,mBAAAzF,KAAA8D,EAAAG,yBACAH,EAAA4B,kBAAA,iBADA,OAfA,GAAAC,EAEAA,GADAzC,EAAA3I,UAAA0H,cAAAkB,KAAAqC,EACArC,EAEA,GAAAD,GAAAC,EAAAqC,EAGA,IAAA1B,GAAA,GAAA8B,eAeA9B,GAAA5C,OAAA,WACA,GAAAhC,GAAA,OAAA4E,EAAA5E,OAAA,IAAA4E,EAAA5E,MACA,IAAAA,EAAA,KAAAA,EAAA,IAEA,WADA4B,GAAA,GAAAb,WAAA,0BAGA,IAAAmD,IACAlE,SACAK,WAAAuE,EAAAvE,WACAc,UAAAyD,GACAxH,IAAAmJ,KAEA9E,EAAA,YAAAmD,KAAAqB,SAAArB,EAAA+B,YACA5E,GAAA,GAAAmD,GAAAzD,EAAAyC,KAGAU,EAAA1C,QAAA,WACAN,EAAA,GAAAb,WAAA,4BAGA6D,EAAAgC,KAAAH,EAAA7C,OAAA6C,EAAArJ,KAAA,GAEA,YAAAqJ,EAAAtC,cACAS,EAAAiC,iBAAA,GAGA,gBAAAjC,IAAA/B,EAAAT,OACAwC,EAAAkC,aAAA,QAGAL,EAAAtF,QAAA7C,QAAA,SAAA/D,EAAAE,GACAmK,EAAAmC,iBAAAtM,EAAAF,KAGAqK,EAAAoC,KAAA,mBAAAP,GAAA9D,UAAA,KAAA8D,EAAA9D,cAGA2C,KAAAzF,MAAAoH,UAAA,MAKAhN,EAAAD,QAAA2G,EAAAd,QACCzF,KAAAuG,KL0P4BvG,KAAKJ,EAASH,EAAoB,KAIzD,SAAUI,EAAQD,GMloBxB,GAAAkN,EAGAA,GAAA,WACA,MAAA9F,QAGA,KAEA8F,KAAAC,SAAA,qBAAAC,MAAA,QACC,MAAArB,GAED,gBAAA7J,UACAgL,EAAAhL,QAOAjC,EAAAD,QAAAkN,GNyoBM,SAAUjN,EAAQD,EAASH,GAEjC,YOtpBA,SAASwN,GAAiBC,GACtB,GAAIC,GAASD,EAAMC,OAEfC,IADMD,EAAOE,QAAQjJ,GACXkJ,EAAkBH,IAC5BI,EAAgBJ,EAAOK,UAAUlD,QAAQ,WAAY,IAAIH,MAC7D,QAAOoD,GACH,IAAK,aACD,EAAAE,EAAA3J,aAAYC,QAASqJ,EACrB,MAEJ,KAAK,cACD,EAAAK,EAAA9I,YACA,MAEJ,KAAK,aACD,EAAA8I,EAAApK,aAAYC,QAAS8J,IAMjC,QAASE,GAAkBH,GACvB,GAAIO,GAAkBC,MAAM1M,UAAU+E,KAAKhG,KAAKmN,EAAOS,UAAW,IAAIC,MAAM,WAC5E,OAAIH,IACAP,EAAOS,UAAUE,OAAO,WACjB,IAEPX,EAAOS,UAAUG,IAAI,WACd,GArCftO,EAAA,EACA,IACAgO,IADAhO,EAAA,GACAA,EAAA,GAwCA0D,UAAS6K,iBAAiB,mBAAoB,SAASd,IACnD,EAAAO,EAAAjM,gBAEA2B,SAAS6K,iBAAiB,QAAS,SAASd,GACxCD,EAAiBC","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ALBUMS_URL = exports.ALBUMS_URL = '/api/albums/';\nvar RANDOM_URL = exports.RANDOM_URL = '/api/random/';\nvar TRACKS_URL = exports.TRACKS_URL = '/api/tracks/';\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createPlayer = createPlayer;\nexports.trackToggle = trackToggle;\nexports.albumToggle = albumToggle;\nexports.randomAdd = randomAdd;\n\nvar _api = __webpack_require__(3);\n\nvar playerAPI = {};\n\nfunction createPlayer() {\n    var playlist = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _sampleRate = function () {\n        var AudioContext = window.AudioContext || window.webkitAudioContext;\n        if (!AudioContext) {\n            return 44100;\n        }\n        return new AudioContext().sampleRate;\n    }();\n    (function (DGPlayer) {\n        if (!DGPlayer) return;\n        playerAPI = DGPlayer;\n        DGPlayer.playlist = playlist;\n        DGPlayer.volume = 50;\n\n        var player, _onplay, onplaylist;\n\n        DGPlayer.on('play', _onplay = function onplay(a, b, c) {\n            if (player) {\n                player.disconnect();\n            }\n            player = new DGAuroraPlayer(AV.Player.fromURL(playerAPI.current.url), DGPlayer);\n            DGPlayer.off('play', _onplay);\n        });\n\n        DGPlayer.on('playlist', onplaylist = function onplaylist(a, b, c) {\n            if (player) {\n                player.disconnect();\n                DGPlayer.state = 'paused';\n            }\n            player = new DGAuroraPlayer(AV.Player.fromURL(playerAPI.current.url), DGPlayer);\n        });\n    })(DGPlayer(document.getElementById('dgplayer')));\n};\n\nfunction trackToggle(trackId, active) {\n    if (active) {\n        (0, _api.fetchTrack)(trackId).then(function (data) {\n            addTrackToPlaylist(data, trackId);\n        });\n    } else {\n        removeTrackFromPlaylist(trackId);\n    }\n};\n\nfunction albumToggle(albumId, active) {\n    if (active) {\n        (0, _api.fetchAlbum)(albumId).then(function (data) {\n            data.tracks.forEach(function (item) {\n                addTrackToPlaylist(item.id, data.artist, item.title, item.file, data.album, data.cover);\n            });\n        });\n    } else {\n        removeAlbumFromPlaylist(albumId); // TODO: get all tracksId from album and remove them separatly\n    }\n};\n\nfunction randomAdd() {\n    (0, _api.fetchRandom)().then(function (data) {\n        data.forEach(function (item) {\n            addTrackToPlaylist(item.id, item.artist, item.title, item.file, item.album, item.cover);\n        });\n    });\n};\n\nfunction addTrackToPlaylist(id, artist, title, file, album, cover) {\n    playerAPI.addSong = {\n        _id: id,\n        name: artist + ' - ' + title,\n        url: encodeURI(file),\n        artist: artist,\n        album: album,\n        picture: encodeURI(cover)\n    };\n};\n\nfunction removeTrackFromPlaylist(id) {\n    if (!playerAPI) return;\n    var songToRemove = playerAPI.playlist.find(function (song) {\n        return song._id === id;\n    });\n    var indexOfSong = playerAPI.playlist.indexOf(songToRemove);\n    if (indexOfSong < 0) {\n        console.warn('NOTHING_TO_REMOVE');\n        return;\n    }\n    playerAPI.removeSong = indexOfSong;\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(fetch) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fetchRandom = fetchRandom;\nexports.fetchAlbum = fetchAlbum;\nexports.fetchTrack = fetchTrack;\n\nvar _constants = __webpack_require__(0);\n\nfunction handleWrongStatusCoode(res) {\n    if (res.status !== 200) {\n        throw new Error(res.url.split('/').slice(3).join('/') + '>' + res.status + ':' + res.statusText);\n    }\n    return res;\n}\n\nfunction fetchRandom() {\n    return fetch('' + _constants.RANDOM_URL).then(handleWrongStatusCoode).then(function (res) {\n        return res.json();\n    }).catch(function (err) {\n        return console.error(err);\n    });\n}\n\nfunction fetchAlbum(albumId) {\n    return fetch('' + _constants.ALBUMS_URL + albumId).then(handleWrongStatusCoode).then(function (res) {\n        return res.json();\n    }).catch(function (err) {\n        return console.error(err);\n    });\n}\n\nfunction fetchTrack(trackId) {\n    return fetch('' + _constants.RANDOM_URL + trackId).then(handleWrongStatusCoode).then(function (res) {\n        return res.json();\n    }).catch(function (err) {\n        return console.error(err);\n    });\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = global.fetch;\n}.call(global));\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(2);\n\nvar _constants = __webpack_require__(0);\n\nvar _player = __webpack_require__(1);\n\nfunction reactingOnClicks(event) {\n    var target = event.target;\n    var id = +target.dataset.id;\n    var already = handleActiveClass(target);\n    var mainClassName = target.className.replace(/active/gi, '').trim();\n    switch (mainClassName) {\n        case 'add-album':\n            {\n                (0, _player.albumToggle)(albumId, already);\n                break;\n            }\n        case 'add-random':\n            {\n                (0, _player.randomAdd)();\n                break;\n            }\n        case 'add-track':\n            {\n                (0, _player.trackToggle)(trackId, already);\n                break;\n            }\n    }\n};\n\nfunction handleActiveClass(target) {\n    var isAlreadyActive = Array.prototype.join.call(target.classList, '').match(/active/gi);\n    if (isAlreadyActive) {\n        target.classList.remove('active');\n        return false;\n    } else {\n        target.classList.add('active');\n        return true;\n    }\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n    (0, _player.createPlayer)();\n\n    document.addEventListener('click', function (event) {\n        reactingOnClicks(event);\n    });\n});\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f8901ae2fa44c2c7fab8","export const ALBUMS_URL = '/api/albums/';\nexport const RANDOM_URL = '/api/random/';\nexport const TRACKS_URL = '/api/tracks/';\n\n\n\n// WEBPACK FOOTER //\n// ./js/src/constants.js","let playerAPI = {};\n\nimport {\n    fetchAlbum,\n    fetchTrack,\n    fetchRandom\n} from './api.js';\n\nexport function createPlayer(playlist = []) {\n    var _sampleRate = (function() {\n        var AudioContext = (window.AudioContext || window.webkitAudioContext);\n        if (!AudioContext) {\n            return 44100;\n        }\n        return new AudioContext().sampleRate;\n    }());\n    (function(DGPlayer) {\n        if (!DGPlayer) return;\n        playerAPI = DGPlayer;\n        DGPlayer.playlist = playlist;\n        DGPlayer.volume = 50;\n\n        var player, onplay, onplaylist;\n \n        DGPlayer.on('play', onplay = function(a,b,c){\n            if (player) {\n                player.disconnect();\n            }\n            player = new DGAuroraPlayer(AV.Player.fromURL(playerAPI.current.url), DGPlayer);\n            DGPlayer.off('play', onplay);\n        });\n\n        DGPlayer.on('playlist', onplaylist = function(a,b,c) {\n            if(player) {\n                player.disconnect();\n                DGPlayer.state = 'paused';\n            }\n            player = new DGAuroraPlayer(AV.Player.fromURL(playerAPI.current.url), DGPlayer);\n        });\n    })(DGPlayer(document.getElementById('dgplayer')));\n};\n\n\nexport function trackToggle(trackId, active) {\n    if (active) {\n        fetchTrack(trackId)\n            .then((data) => {\n                addTrackToPlaylist(data, trackId)\n            })\n    } else {\n        removeTrackFromPlaylist(trackId);\n    }\n};\n\nexport function albumToggle(albumId, active) {\n    if (active) {\n        fetchAlbum(albumId)\n            .then((data) => {\n                data.tracks.forEach((item) => { \n                    addTrackToPlaylist(item.id, data.artist, item.title, item.file, data.album, data.cover);\n                });\n            });\n    } else {\n        removeAlbumFromPlaylist(albumId); // TODO: get all tracksId from album and remove them separatly\n    }\n};\n\nexport function randomAdd() {\n    fetchRandom()\n        .then((data) => {\n            data.forEach((item) => {\n                addTrackToPlaylist(item.id, item.artist, item.title, item.file, item.album, item.cover);\n            });\n        });\n};\n\n\nfunction addTrackToPlaylist(id, artist, title, file, album, cover) {\n    playerAPI.addSong = {\n        _id    : id,\n        name   : artist + ' - ' + title,\n        url    : encodeURI(file),\n        artist : artist,\n        album  : album,\n        picture:  encodeURI(cover)\n    };\n};\n\n\nfunction removeTrackFromPlaylist(id) {\n    if (!playerAPI) return;\n    var songToRemove = playerAPI.playlist.find((song) => song._id === id);\n    var indexOfSong = playerAPI.playlist.indexOf(songToRemove);\n    if (indexOfSong < 0) {\n        console.warn('NOTHING_TO_REMOVE');\n        return;\n    }\n    playerAPI.removeSong = indexOfSong;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./js/src/player.js","import { ALBUMS_URL, RANDOM_URL, TRACKS_URL } from './constants';\n\nfunction handleWrongStatusCoode(res) {\n    if (res.status !== 200) {\n        throw new Error(res.url.split(`/`).slice(3).join(`/`) + `>`\n            + res.status + `:` + res.statusText\n        );\n    }\n    return res;\n}\n\nexport function fetchRandom() {\n    return fetch(`${ RANDOM_URL }`)\n        .then(handleWrongStatusCoode)\n        .then((res) => res.json())\n        .catch((err) => console.error(err));\n}\n\nexport function fetchAlbum(albumId) {\n    return fetch(`${ ALBUMS_URL }${ albumId }`)\n        .then(handleWrongStatusCoode)\n        .then((res) => res.json())\n        .catch((err) => console.error(err));\n}\n\nexport function fetchTrack(trackId) {\n    return fetch(`${ RANDOM_URL }${ trackId }`)\n        .then(handleWrongStatusCoode)\n        .then((res) => res.json())\n        .catch((err) => console.error(err));\n}\n\n\n// WEBPACK FOOTER //\n// ./js/src/api.js","/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = global.fetch;\n}.call(global));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/imports-loader?this=>global!./~/exports-loader?global.fetch!./~/whatwg-fetch/fetch.js\n// module id = 4\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 5\n// module chunks = 0","import '../../sass/main.scss';\nimport { pathToAlbumsApi, pathToRandomApi, pathToTracksApi } from './constants';\nimport { \n    createPlayer,\n    randomAdd,\n    trackToggle,\n    albumToggle\n} from './player';\n\nfunction reactingOnClicks(event) { \n    var target = event.target; \n    var id = +target.dataset.id;\n    var already = handleActiveClass(target);\n    var mainClassName = target.className.replace(/active/gi, '').trim(); \n    switch(mainClassName) { \n        case 'add-album': {\n            albumToggle(albumId, already);\n            break;\n        }\n        case 'add-random': {\n            randomAdd();\n            break;\n        }\n        case 'add-track': {\n            trackToggle(trackId, already);\n            break;\n        }\n    } \n};\n\nfunction handleActiveClass(target) { \n    var isAlreadyActive = Array.prototype.join.call(target.classList, '').match(/active/gi); \n    if (isAlreadyActive) { \n        target.classList.remove('active'); \n        return false;\n    } else { \n        target.classList.add('active');\n        return true;\n    } \n};\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n    createPlayer();\n\n    document.addEventListener('click', function(event) { \n        reactingOnClicks(event); \n    });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./js/src/index.js"],"sourceRoot":""}